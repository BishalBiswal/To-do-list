{"version":3,"sources":["dat.js","App.js","index.js"],"names":["data","id","name","App","useState","setName","tasks","setTasks","isempty","setIsempty","eliminateTasks","newtasks","filter","className","length","onSubmit","e","preventDefault","task","Date","getTime","toString","alert","type","value","onChange","target","map","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAAaA,EAAO,CAChB,CAAEC,GAAI,EAAGC,KAAM,cACf,CAAED,GAAI,EAAGC,KAAM,iBACf,CAAED,GAAI,EAAGC,KAAM,qDACf,CAAED,GAAI,EAAGC,KAAM,gB,cCmDJC,EAnDH,WACV,MAAwBC,mBAAS,IAAjC,mBAAOF,EAAP,KAAaG,EAAb,KACA,EAA0BD,mBAASJ,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAkBMC,EAAiB,SAACT,GACtB,IAAIU,EAAWL,EAAMM,QAAO,SAACN,GAAD,OAAWA,EAAML,KAAOA,KACpDM,EAASI,IAEX,OACE,0BAASE,UAAU,OAAnB,UACE,4CACCP,EAAMQ,OAAS,8BAAIR,EAAMQ,OAAV,8BAAgD,6EAChE,kCACE,uBAAMD,UAAU,OAAOE,SA1BR,SAACC,GAEpB,GADAA,EAAEC,iBACEf,EAAM,CACR,IAAMgB,EAAO,CAAEjB,IAAI,IAAIkB,MAAOC,UAAUC,WAAYnB,QACpDO,GAAW,GACXF,GAAS,SAACD,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAkBY,OAEpBb,EAAQ,SAIRI,GAAW,GACXa,MAAM,yBAaJ,UACE,uBAAOC,KAAK,OAAOV,UAAWL,EAAU,MAAQ,aAAcgB,MAAOtB,EAAMuB,SAAU,SAACT,GAAD,OAAOX,EAAQW,EAAEU,OAAOF,UAC7G,wBAAQD,KAAK,SAASV,UAAU,OAAhC,2BAGHP,EAAMqB,KAAI,SAACrB,GACV,IAAQL,EAAaK,EAAbL,GAAIC,EAASI,EAATJ,KACZ,OACE,mCACE,sBAAcW,UAAU,OAAxB,UACE,4BAAIX,IACJ,wBAAQW,UAAU,MAAMe,QAAS,kBAAMlB,EAAeT,IAAtD,SAA2D,cAAC,IAAD,QAFnDA,QAOhB,wBAAQY,UAAU,MAAMe,QAAS,kBAAMrB,EAAS,KAAhD,+BC5CNsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.f5357da5.chunk.js","sourcesContent":["export const data = [\r\n    { id: 1, name: 'Clean Room' },\r\n    { id: 2, name: 'Buy Microsoft' },\r\n    { id: 3, name: 'Build a chimp army and establish world domination' },\r\n    { id: 4, name: 'Brush teeth' },\r\n];\r\n","import React, { useState } from 'react';\nimport { data } from './dat.js'\nimport { FaCheck } from 'react-icons/fa';\nimport './index.css';\nconst App = () => {\n  const [name, setName] = useState(\"\");\n  const [tasks, setTasks] = useState(data);\n  const [isempty, setIsempty] = useState(false);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name) {\n      const task = { id: new Date().getTime().toString(), name }\n      setIsempty(false)\n      setTasks((tasks) => {\n        return [...tasks, task]\n      })\n      setName('')\n    }\n\n    else {\n      setIsempty(true)\n      alert(\"Can't add empty task\")\n\n    }\n  }\n  const eliminateTasks = (id) => {\n    let newtasks = tasks.filter((tasks) => tasks.id !== id);\n    setTasks(newtasks);\n  }\n  return (\n    <section className=\"list\">\n      <h2>To-do List</h2>\n      {tasks.length ? <p>{tasks.length} tasks to complete today</p> : <p>Hurray, you've completed all tasks for today</p>}\n      <article>\n        <form className='form' onSubmit={handleSubmit}>\n          <input type='text' className={isempty ? 'red' : 'list-input'} value={name} onChange={(e) => setName(e.target.value)}></input>\n          <button type='submit' className='btn1'>Add Task</button>\n        </form>\n      </article>\n      {tasks.map((tasks) => {\n        const { id, name } = tasks;\n        return (\n          <>\n            <div key={id} className=\"item\">\n              <p>{name}</p>\n              <button className='btn' onClick={() => eliminateTasks(id)}><FaCheck /></button>\n            </div>\n          </>\n        )\n      })}\n      <button className='btn' onClick={() => setTasks([])}>Completed all</button>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}