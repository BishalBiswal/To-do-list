{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bishal\\\\Documents\\\\programming files\\\\To-do-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { data } from './dat.js';\nimport { FaCheck } from 'react-icons/fa';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [tasks, setTasks] = useState(data);\n  const [isempty, setIsempty] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name) {\n      const task = {\n        id: new Date().getTime().toString(),\n        name\n      };\n      setIsempty(false);\n      setTasks(tasks => {\n        return [...tasks, task];\n      });\n      setName('');\n    } else {\n      setIsempty(true);\n      alert(\"Can't add empty task\");\n    }\n  };\n  const eliminateTasks = id => {\n    let newtasks = tasks.filter(tasks => tasks.id !== id);\n    setTasks(newtasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"To-do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), tasks.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [tasks.length, \" tasks to complete today\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hurray, you've completed all tasks for today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 71\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: isempty ? 'red' : 'list-input',\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn1\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), tasks.map(tasks => {\n      const {\n        id,\n        name\n      } = tasks;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => eliminateTasks(id),\n            children: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 74\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: () => setTasks([]),\n      children: \"Completed all\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OeaR5epytapo+wlo1aUB8+Jlf9g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","data","FaCheck","App","name","setName","tasks","setTasks","isempty","setIsempty","handleSubmit","e","preventDefault","task","id","Date","getTime","toString","alert","eliminateTasks","newtasks","filter","length","target","value","map"],"sources":["C:/Users/Bishal/Documents/programming files/To-do-list/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { data } from './dat.js'\r\nimport { FaCheck } from 'react-icons/fa';\r\nimport './index.css';\r\nconst App = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [tasks, setTasks] = useState(data);\r\n  const [isempty, setIsempty] = useState(false);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (name) {\r\n      const task = { id: new Date().getTime().toString(), name }\r\n      setIsempty(false)\r\n      setTasks((tasks) => {\r\n        return [...tasks, task]\r\n      })\r\n      setName('')\r\n    }\r\n\r\n    else {\r\n      setIsempty(true)\r\n      alert(\"Can't add empty task\")\r\n\r\n    }\r\n  }\r\n  const eliminateTasks = (id) => {\r\n    let newtasks = tasks.filter((tasks) => tasks.id !== id);\r\n    setTasks(newtasks);\r\n  }\r\n  return (\r\n    <section className=\"list\">\r\n      <h2>To-do List</h2>\r\n      {tasks.length ? <p>{tasks.length} tasks to complete today</p> : <p>Hurray, you've completed all tasks for today</p>}\r\n      <article>\r\n        <form className='form' onSubmit={handleSubmit}>\r\n          <input type='text' className={isempty ? 'red' : 'list-input'} value={name} onChange={(e) => setName(e.target.value)}></input>\r\n          <button type='submit' className='btn1'>Add Task</button>\r\n        </form>\r\n      </article>\r\n      {tasks.map((tasks) => {\r\n        const { id, name } = tasks;\r\n        return (\r\n          <>\r\n            <div key={id} className=\"item\">\r\n              <p>{name}</p>\r\n              <button className='btn' onClick={() => eliminateTasks(id)}><FaCheck /></button>\r\n            </div>\r\n          </>\r\n        )\r\n      })}\r\n      <button className='btn' onClick={() => setTasks([])}>Completed all</button>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,UAAU;AAC/B,SAASC,OAAO,QAAQ,gBAAgB;AACxC,OAAO,aAAa;AAAC;AAAA;AACrB,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACC,IAAI,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMU,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIR,IAAI,EAAE;MACR,MAAMS,IAAI,GAAG;QAAEC,EAAE,EAAE,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,CAACC,QAAQ,EAAE;QAAEb;MAAK,CAAC;MAC1DK,UAAU,CAAC,KAAK,CAAC;MACjBF,QAAQ,CAAED,KAAK,IAAK;QAClB,OAAO,CAAC,GAAGA,KAAK,EAAEO,IAAI,CAAC;MACzB,CAAC,CAAC;MACFR,OAAO,CAAC,EAAE,CAAC;IACb,CAAC,MAEI;MACHI,UAAU,CAAC,IAAI,CAAC;MAChBS,KAAK,CAAC,sBAAsB,CAAC;IAE/B;EACF,CAAC;EACD,MAAMC,cAAc,GAAIL,EAAE,IAAK;IAC7B,IAAIM,QAAQ,GAAGd,KAAK,CAACe,MAAM,CAAEf,KAAK,IAAKA,KAAK,CAACQ,EAAE,KAAKA,EAAE,CAAC;IACvDP,QAAQ,CAACa,QAAQ,CAAC;EACpB,CAAC;EACD,oBACE;IAAS,SAAS,EAAC,MAAM;IAAA,wBACvB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,EAClBd,KAAK,CAACgB,MAAM,gBAAG;MAAA,WAAIhB,KAAK,CAACgB,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAA6B,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmD,eACnH;MAAA,uBACE;QAAM,SAAS,EAAC,MAAM;QAAC,QAAQ,EAAEZ,YAAa;QAAA,wBAC5C;UAAO,IAAI,EAAC,MAAM;UAAC,SAAS,EAAEF,OAAO,GAAG,KAAK,GAAG,YAAa;UAAC,KAAK,EAAEJ,IAAK;UAAC,QAAQ,EAAGO,CAAC,IAAKN,OAAO,CAACM,CAAC,CAACY,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA,QAAS,eAC7H;UAAQ,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAC,MAAM;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkB;MAAA;QAAA;QAAA;QAAA;MAAA;IACnD;MAAA;MAAA;MAAA;IAAA,QACC,EACTlB,KAAK,CAACmB,GAAG,CAAEnB,KAAK,IAAK;MACpB,MAAM;QAAEQ,EAAE;QAAEV;MAAK,CAAC,GAAGE,KAAK;MAC1B,oBACE;QAAA,uBACE;UAAc,SAAS,EAAC,MAAM;UAAA,wBAC5B;YAAA,UAAIF;UAAI;YAAA;YAAA;YAAA;UAAA,QAAK,eACb;YAAQ,SAAS,EAAC,KAAK;YAAC,OAAO,EAAE,MAAMe,cAAc,CAACL,EAAE,CAAE;YAAA,uBAAC,QAAC,OAAO;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA,GAFvEA,EAAE;UAAA;UAAA;UAAA;QAAA;MAGN,iBACL;IAEP,CAAC,CAAC,eACF;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAE,MAAMP,QAAQ,CAAC,EAAE,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB;EAAA;IAAA;IAAA;IAAA;EAAA,QACnE;AAEd,CAAC;AAAA,GAjDKJ,GAAG;AAAA,KAAHA,GAAG;AAmDT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}